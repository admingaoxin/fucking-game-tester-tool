[project]
name = ""
version = ""
description = ""
authors = [
    {name = "houchen", email = "929631058@qq.com"},
]
dependencies = [
    "django>=4.2.3",
    "pytest>=7.4.0",
    "allure-pytest>=2.13.2",
    "jsonpath>=0.82",
    "pyyaml>=6.0.1",
    "pytest-yaml>=1.2.1",
    "requests>=2.31.0",
    "pytest-yaml-sanmu>=0.2.3",
    "djangorestframework>=3.14.0",
    "markdown>=3.4.4",
    "django-filter>=23.2",
    "drf-spectacular[sidecar]>=0.26.4",
    "pytest-xlsx>=0.5.2",
    "selenium>=4.11.2",
    "openpyxl>=3.1.2",
    "django-q2>=1.5.4",
    "croniter>=1.4.1",
    "django-cors-headers>=4.3.0",
]
requires-python = ">=3.11"
readme = "README.md"
license = {text = "houchen_spdx"}

[tool.pdm.scripts]
init = { composite = [
    "makeM",
    "M",
    "createadmin",
]}

houchen={composite=[
    'black .',
    'isort .',
    'flake8 .',
    'pytest',
]}
makeM = 'python manage.py makemigrations'
M = 'python manage.py migrate'
R = 'python manage.py runserver' # --noreload
T = 'python manage.py test'
createadmin = '''python manage.py shell -c "from django.contrib.auth.models import User; User.objects.create_superuser('admin', 'admin@example.com','adminpass')"'''
[tool.pdm.dev-dependencies]
dev = [
    "black>=23.7.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "pytest>=7.4.0",
    "pytest-django>=4.5.2",
    "pytest-coverage>=0.0",
]
