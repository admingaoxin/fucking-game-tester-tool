{"uid":"abd68b68d372846d","name":"请求百度","fullName":"tests.test_case#test_","historyId":"a8a6bbcf64ac68c734958e730dcc05a2","time":{"start":1719466392405,"stop":1719466393476,"duration":1071},"status":"broken","statusMessage":"AttributeError: 'Response' object has no attribute ''","statusTrace":"all_case_info = [1453774818720]\n\n    @pytest.mark.parametrize(\n        \"all_case_info\",\n        case_info_list,\n        ids=case_name_list,\n    )\n    def test_(all_case_info):\n        set_allure_info(all_case_info)  # 1. 设置allure报告定制\n>       run_case(all_case_info)  # 2. 执行接口请求和断言\n\n..\\..\\TSL_work\\tests\\test_case.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nall_case_info = [1453774818720]\n\n    def run_case(all_case_info):\n        for case_info in all_case_info:\n            # 1. request 请求接口\n            request = case_info.request  # 字典  -> 字符串  -> 替换变量  -> 字典  ->传参\n            request_str = yaml.safe_dump(request, allow_unicode=True)  # 字典转字符串\n    \n            # new_request_str = Template(request_str).safe_substitute(extrac_data) # string的Template，只支持变量，不支持函数\n            ## pytest-yaml的Template，支持变量，也支持函数\n            new_request_str = Template(request_str).render(extrac_data)\n    \n            # print(f\"{request_str=}\")\n            # print(f\"{new_request_str=}\")\n            new_request = yaml.safe_load(new_request_str)  # 字符串转字典\n    \n            resp = session.request(**new_request)\n            try:\n                resp.json = resp.json()  # 把带括号的结果，报错到不带括号的属性\n            except:\n                resp.json = {\"msg\": \"is not json data\"}\n    \n            # 2. extract 提取返回数据\n            if isinstance(case_info.extract, dict):\n                for val_name, val_expr in case_info.extract.items():\n>                   attr = getattr(resp, val_expr[0])  # 通过反射+ 表达式第一项，得到全部数据\nE                   AttributeError: 'Response' object has no attribute ''\n\n..\\..\\TSL_work\\commons\\case_util.py:111: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'Response' object has no attribute ''","statusTrace":"all_case_info = [1453774818720]\n\n    @pytest.mark.parametrize(\n        \"all_case_info\",\n        case_info_list,\n        ids=case_name_list,\n    )\n    def test_(all_case_info):\n        set_allure_info(all_case_info)  # 1. 设置allure报告定制\n>       run_case(all_case_info)  # 2. 执行接口请求和断言\n\n..\\..\\TSL_work\\tests\\test_case.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nall_case_info = [1453774818720]\n\n    def run_case(all_case_info):\n        for case_info in all_case_info:\n            # 1. request 请求接口\n            request = case_info.request  # 字典  -> 字符串  -> 替换变量  -> 字典  ->传参\n            request_str = yaml.safe_dump(request, allow_unicode=True)  # 字典转字符串\n    \n            # new_request_str = Template(request_str).safe_substitute(extrac_data) # string的Template，只支持变量，不支持函数\n            ## pytest-yaml的Template，支持变量，也支持函数\n            new_request_str = Template(request_str).render(extrac_data)\n    \n            # print(f\"{request_str=}\")\n            # print(f\"{new_request_str=}\")\n            new_request = yaml.safe_load(new_request_str)  # 字符串转字典\n    \n            resp = session.request(**new_request)\n            try:\n                resp.json = resp.json()  # 把带括号的结果，报错到不带括号的属性\n            except:\n                resp.json = {\"msg\": \"is not json data\"}\n    \n            # 2. extract 提取返回数据\n            if isinstance(case_info.extract, dict):\n                for val_name, val_expr in case_info.extract.items():\n>                   attr = getattr(resp, val_expr[0])  # 通过反射+ 表达式第一项，得到全部数据\nE                   AttributeError: 'Response' object has no attribute ''\n\n..\\..\\TSL_work\\commons\\case_util.py:111: AttributeError","steps":[],"attachments":[{"uid":"295a84c8308fd91a","name":"log","source":"295a84c8308fd91a.txt","type":"text/plain","size":1083}],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":1},"afterStages":[],"labels":[{"name":"epic","value":"码尚教育自动化测试系统"},{"name":"feature","value":"北凡默认模块"},{"name":"story","value":"北凡默认功能"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_case"},{"name":"host","value":"DESKTOP-S5H94PU"},{"name":"thread","value":"18508-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_case"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"all_case_info","value":"[1453774818720]"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"abd68b68d372846d.json","parameterValues":["[1453774818720]"]}